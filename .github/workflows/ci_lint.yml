name: üêÇ Continuous integration - Lint

on:
  workflow_call:

jobs:
  check:
    name: Cargo check, format, clippy + Ruff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy rust-toolchain.toml to root
        run: |
          cp ${{ github.workspace }}/oxen-rust/rust-toolchain.toml .

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Cache based on dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            oxen-rust/target/
            oxen-python/target/
          key: ${{ runner.os }}-cargo-oxen-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo Check
        run: |
          cd ${{ github.workspace }}/oxen-rust
          cargo build
          # cargo check --all-targets --all-features

          cd ${{ github.workspace }}/oxen-python
          cargo build
          # cargo check --all-targets --all-features

      - name: Cargo Format
        run: |
          cd ${{ github.workspace }}/oxen-rust
          cargo fmt --all -- --check

          cd ${{ github.workspace }}/oxen-python
          cargo fmt --all -- --check

      # - name: Cargo Clippy
      #   run: |
      #     cd ${{ github.workspace }}/oxen-rust
      #     cargo clippy --no-deps -- -D warnings

      #     cd ${{ github.workspace }}/oxen-python
      #     cargo clippy --no-deps -- -D warnings

      # - name: Ruff check
      #   run: |
      #     cd ${{ github.workspace }}/oxen-python

      #     uvx ruff check .
name: üêÇ Continuous integration - Tests oxen-python

on:
  workflow_call:

jobs:
  test_linux:
    name: Test Suite Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Copy binaries to home directory
        run: |
          cp oxen-rust/target/debug/oxen ~/oxen
          cp oxen-rust/target/debug/oxen-server ~/oxen-server
          chmod +x ~/oxen ~/oxen-server

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/oxen-python
          uv sync

      - name: Run Tests
        run: |
          ~/oxen config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ~/oxen-server start &

          cd ${{ github.workspace }}/oxen-python
          uvx pytest -s tests

  test_macos:
    name: Test Suite MacOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Copy binaries to home directory
        run: |
          cp oxen-rust/target/debug/oxen ~/oxen
          cp oxen-rust/target/debug/oxen-server ~/oxen-server
          chmod +x ~/oxen ~/oxen-server

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/oxen-python
          uv sync

      - name: Run Tests
        run: |
          ~/oxen config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ~/oxen-server start &

          cd ${{ github.workspace }}/oxen-python
          uvx pytest -s tests

  test_windows:
    name: Test Suite Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Copy binaries to workspace root
        run: |
          copy oxen-rust\target\debug\oxen.exe ${{ github.workspace }}\oxen.exe
          copy oxen-rust\target\debug\oxen-server.exe ${{ github.workspace }}\oxen-server.exe

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}\oxen-python
          uv sync

      - name: Run Tests
        run: |
          ${{ github.workspace }}\oxen.exe config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ${{ github.workspace }}\oxen-server.exe start &

          cd ${{ github.workspace }}\oxen-python
          uvx pytest -s tests --ignore=tests/test_data_frame.py --ignore=tests/test_embeddings.py --ignore=tests/test_fsspec_backend.py
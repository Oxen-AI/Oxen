name: üêÇ Continuous integration - Tests oxen-python

on:
  workflow_call:

jobs:
  test_linux:
    name: Test Suite Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-server-linux-x86_64.tar.gz"
      #     out-file-path: "."

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-linux-x86_64.tar.gz"
      #     out-file-path: "."

      - name: Download oxen-server
        run: |
          curl -L -o oxen-server-linux-x86_64.tar.gz https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen-linux-server-binary-x86_64-latest.tar.gz

      - name: Download oxen
        run: |
          curl -L -o oxen-linux-x86_64.tar.gz https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen-linux-binary-x86_64-latest.tar.gz

      - name: Extract oxen binaries
        run: |
          tar -xzf oxen-server-linux-x86_64.tar.gz
          tar -xzf oxen-linux-x86_64.tar.gz

          mv oxen-linux-server-binary-x86_64-latest/oxen-server ~/
          mv oxen-linux-binary-x86_64-latest/oxen ~/

          # mv oxen-server ~/
          # mv oxen ~/

          chmod +x ~/oxen-server
          chmod +x ~/oxen

          rm oxen-server-linux-x86_64.tar.gz
          rm oxen-linux-x86_64.tar.gz

      - name: Update liboxen crate location
        run: |
          sed -i 's|liboxen = ".*|liboxen = { path = "..\/oxen-rust\/src\/lib" }|' ${{ github.workspace }}/oxen-python/Cargo.toml

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/oxen-python
          uv sync

      - name: Run Tests
        run: |
          ~/oxen config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ~/oxen-server start &

          cd ${{ github.workspace }}/oxen-python
          pytest -s tests

  test_macos:
    name: Test Suite MacOS
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-server-macos-arm64.tar.gz"
      #     out-file-path: "."

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-macos-arm64.tar.gz"
      #     out-file-path: "."

      - name: Download oxen-server
        run: |
          curl -L -o oxen-server-macos-arm64.tar.gz https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen-server-mac-13.0.tar.gz

      - name: Download oxen
        run: |
          curl -L -o oxen-macos-arm64.tar.gz https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen-mac-13.0.tar.gz

      - name: Extract oxen binaries
        run: |
          tar -xzf oxen-server-macos-arm64.tar.gz
          tar -xzf oxen-macos-arm64.tar.gz

          mv oxen-server ~/
          mv oxen ~/

          chmod +x ~/oxen-server
          chmod +x ~/oxen

          rm oxen-server-macos-arm64.tar.gz
          rm oxen-macos-arm64.tar.gz

      - name: Update liboxen crate location
        run: |
          sed -i .tmp 's|liboxen = ".*|liboxen = { path = "..\/oxen-rust\/src\/lib" }|' ${{ github.workspace }}/oxen-python/Cargo.toml

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}/oxen-python
          uv sync

      - name: Run Tests
        run: |
          ~/oxen config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ~/oxen-server start &

          cd ${{ github.workspace }}/oxen-python
          pytest -s tests

  test_windows:
    name: Test Suite Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.10"

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-server-windows-x86_64.zip"
      #     out-file-path: "."

      # - uses: robinraju/release-downloader@v1.8
      #   with:
      #     latest: true
      #     fileName: "oxen-windows-x86_64.zip"
      #     out-file-path: "."

      - name: Download oxen-server
        run: |
          Invoke-WebRequest -Uri "https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen-server.exe" -OutFile "oxen-server.exe"

      - name: Download oxen
        run: |
          Invoke-WebRequest -Uri "https://github.com/Oxen-AI/oxen-archive/releases/download/v0.36.1/oxen.exe" -OutFile "oxen.exe"

      # - name: Extract oxen binaries
      #   run: |
      #     Expand-Archive -Path "oxen-server-windows-x86_64.zip" -DestinationPath "." -Force
      #     Expand-Archive -Path "oxen-windows-x86_64.zip" -DestinationPath "." -Force

      - name: Update liboxen crate location
        run: |
          $content = Get-Content "${{ github.workspace }}\oxen-python\Cargo.toml"
          $content = $content -replace 'liboxen = ".*', 'liboxen = { path = "../oxen-rust/src/lib" }'
          Set-Content "${{ github.workspace }}\oxen-python\Cargo.toml" -Value $content

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}\oxen-python
          uv sync

      - name: Run Tests
        run: |
          ${{ github.workspace }}\oxen.exe config --name "Bessie Testington" --email "bessie@yourcompany.com"
          ${{ github.workspace }}\oxen-server.exe start &

          cd ${{ github.workspace }}\oxen-python
          pytest -s tests --ignore=tests/test_data_frame.py --ignore=tests/test_embeddings.py --ignore=tests/test_fsspec_backend.py
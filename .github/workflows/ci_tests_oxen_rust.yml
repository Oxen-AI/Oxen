name: üêÇ Continuous integration - Tests oxen-rust

on:
  workflow_call:

jobs:
  test_linux:
    name: Test Suite Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy rust-toolchain.toml to root
        run: |
          cp ${{ github.workspace }}/oxen-rust/rust-toolchain.toml .

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cache based on dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            oxen-rust/target/
            oxen-python/target/
          key: ${{ runner.os }}-cargo-oxen-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: |
          cd oxen-rust

          mkdir -p data/test/runs
          mkdir -p /tmp/oxen_sync/

          cargo build

          ./target/debug/oxen-server add-user --email ox@oxen.ai --name Ox --output user_config.toml
          cp user_config.toml data/test/config/user_config.toml

          ./target/debug/oxen-server start &
          cargo test -- --test-threads=3

      - name: Cache build artifacts
        uses: actions/cache/save@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}

  test_macos:
    name: MacOS tests + RSpec Tests
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Cache based on dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            oxen-rust/target/
            oxen-python/target/
          key: ${{ runner.os }}-cargo-oxen-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          brew update
          brew install pkg-config || brew upgrade pkg-config
          brew install ffmpeg imagemagick

      - name: Install and start Redis
        run: |
          brew install redis
          brew services start redis

      - name: Run tests
        run: |
          cd ${{ github.workspace }}/oxen-rust

          mkdir -p data/test/runs
          mkdir -p /tmp/oxen_sync/

          cargo build

          ./target/debug/oxen-server add-user --email ox@oxen.ai --name Ox --output user_config.toml
          cp user_config.toml data/test/config/user_config.toml

          ./target/debug/oxen-server start &
          cargo test -- --test-threads=3

      - name: Cache build artifacts
        uses: actions/cache/save@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}

      - name: Run Rspec Tests
        env:
          PATH: ${{ env.PATH }}:${{ github.workspace }}/oxen-rust/target/debug
        run: |
          cd ${{ github.workspace }}/oxen-rust

          echo "üêÇ Running tests"
          cd cli-test
          bundle config path vendor/bundle
          bundle install
          bundle exec rspec spec/test_cases/**/tests.rb

  test_windows:
    name: Windows tests + RSpec Tests
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Cache based on dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            oxen-rust/target/
            oxen-python/target/
          key: ${{ runner.os }}-cargo-oxen-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Tests
        run: |
          cd ${{ github.workspace }}/oxen-rust

          mkdir .\data\test\runs

          cargo build

          .\target\debug\oxen-server add-user --email ox@oxen.ai --name Ox --output user_config.toml
          cp user_config.toml data\test\config\user_config.toml

          Start-Process -FilePath "${{ github.workspace }}\oxen-rust\target\debug\oxen-server.exe" -WindowStyle Hidden -ArgumentList "start"
          cargo test -- --test-threads=1

      - name: Cache build artifacts
        uses: actions/cache/save@v4
        with:
          path: |
            oxen-rust/target/debug/
          key: ${{ runner.os }}-oxen-rust-artifacts-${{ github.sha }}

      - name: Run Rspec Tests
        env:
          PATH: ${{ env.PATH }};${{ github.workspace }}/oxen-rust/target/debug
        run: |
          cd ${{ github.workspace }}/oxen-rust

          echo "üêÇ Running tests"
          cd cli-test
          bundle config path vendor/bundle
          bundle install
          bundle exec rspec spec/test_cases/**/tests.rb

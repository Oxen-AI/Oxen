on: [push]

name: üêÇ Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
          libdbus-1-dev \
          libavutil-dev libavformat-dev libavdevice-dev libavfilter-dev \
          libswscale-dev libswresample-dev libpostproc-dev libssl-dev pkg-config \
          ruby ruby-dev rubygems build-essential
      - name: Install imagemagick
        run: |
          export MAGICK_VERSION=7.1 \
          && curl https://imagemagick.org/archive/ImageMagick.tar.gz | tar xz \
          && cd ImageMagick-${MAGICK_VERSION}* \
          && ./configure --with-magick-plus-plus=no --with-perl=no \
          && make \
          && sudo make install \
          && cd .. \
          && rm -r ImageMagick-${MAGICK_VERSION}*
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
          libdbus-1-dev \
          libavutil-dev libavformat-dev libavdevice-dev libavfilter-dev \
          libswscale-dev libswresample-dev libpostproc-dev libssl-dev pkg-config \
          ruby ruby-dev rubygems build-essential
      - name: Install imagemagick
        run: |
          export MAGICK_VERSION=7.1 \
          && curl https://imagemagick.org/archive/ImageMagick.tar.gz | tar xz \
          && cd ImageMagick-${MAGICK_VERSION}* \
          && ./configure --with-magick-plus-plus=no --with-perl=no \
          && make \
          && sudo make install \
          && cd .. \
          && rm -r ImageMagick-${MAGICK_VERSION}*
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
          libdbus-1-dev \
          libavutil-dev libavformat-dev libavdevice-dev libavfilter-dev \
          libswscale-dev libswresample-dev libpostproc-dev libssl-dev pkg-config \
          ruby ruby-dev rubygems build-essential
      - name: Install imagemagick
        run: |
          export MAGICK_VERSION=7.1 \
          && curl https://imagemagick.org/archive/ImageMagick.tar.gz | tar xz \
          && cd ImageMagick-${MAGICK_VERSION}* \
          && ./configure --with-magick-plus-plus=no --with-perl=no \
          && make \
          && sudo make install \
          && cd .. \
          && rm -r ImageMagick-${MAGICK_VERSION}*
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --no-deps -- -D warnings

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt-get update \
          && sudo apt-get install -y \
          libdbus-1-dev \
          libavutil-dev libavformat-dev libavdevice-dev libavfilter-dev \
          libswscale-dev libswresample-dev libpostproc-dev libssl-dev pkg-config musl-tools \
          ruby ruby-dev rubygems build-essential
      - name: Install imagemagick
        run: |
          export MAGICK_VERSION=7.1 \
          && curl https://imagemagick.org/archive/ImageMagick.tar.gz | tar xz \
          && cd ImageMagick-${MAGICK_VERSION}* \
          && ./configure --with-magick-plus-plus=no --with-perl=no \
          && make \
          && sudo make install \
          && sudo ldconfig /usr/local/lib \
          && cd .. \
          && rm -r ImageMagick-${MAGICK_VERSION}*
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - uses: icepuma/rust-action@32deca3ee074df35b446b23b973b4acda4c4541f
      - run: |
          rustup target add x86_64-unknown-linux-musl
          cargo build --target x86_64-unknown-linux-musl --release
          mkdir /tmp/oxen_sync/
          mkdir data/test/runs
          ./target/release/oxen-server add-user --email ox@oxen.ai --name Ox --output user_config.toml
          cp user_config.toml data/test/config/user_config.toml
          ./target/release/oxen-server start &
          cargo test -- --test-threads=3
